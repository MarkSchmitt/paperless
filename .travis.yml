language: python

before_install:
- sudo apt-get update -qq
- sudo apt-get install -qq libpoppler-cpp-dev unpaper tesseract-ocr

sudo: false

matrix:
    include:
        - python: "3.5"
        - python: "3.6"
        - python: "3.7-dev"
        - env:
            - BUILD_DOCKER=1
            # Variable to add to publish the Docker image:
            # * DOCKER_USERNAME
            # * DOCKER_PASSWORD, to be encrypted, use `travis encrypt DOCKER_PASSWORD=<password>`
          services:
            - docker
          before_install:
            - true
          install:
            - true
          script:
            - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            - docker run --rm --privileged multiarch/qemu-user-static:register --reset
            - docker build -f Dockerfile.amd64 --tag=moztr/paperless-travis:amd64 .
            - docker push moztr/paperless-travis:amd64
            - docker build -f Dockerfile.arm64v8 --tag=moztr/paperless-travis:arm64v8 .
            - docker push moztr/paperless-travis:arm64v8
            - docker build -f Dockerfile.arm32v7 --tag=moztr/paperless-travis:arm32v7 .
            - docker push moztr/paperless-travis:arm32v7
          after_success:
            - true

install:
    - pip install --upgrade pip pipenv sphinx
    - pipenv lock -r > requirements.txt
    - pip install -r requirements.txt

script:
    - cd src/
    - pytest --cov
    - pycodestyle
    - sphinx-build -b html ../docs ../docs/_build -W

after_success:
  - coveralls

deploy:
  - provider: script
    skip_cleanup: true
    script: ci/deploy-docker
    on:
      tags: true
      condition: '"${BUILD_DOCKER}" = 1'
  - provider: script
    skip_cleanup: true
    script: ci/deploy-docker
    on:
      branch: master
      condition: '"${BUILD_DOCKER}" = 1'
  - provider: script
    skip_cleanup: true
    script: ci/deploy-docker
    on:
      branch: "feature/multi-arch-docker-build"
      condition: '"${BUILD_DOCKER}" = 1'
